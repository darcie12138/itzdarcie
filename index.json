[{"categories":[],"content":" class Me: def __init__(self): self.name = \"Yuwei Ding\" self.prefer_name = \"Darcie\" self.born_year = 2002 self.MBTI = ESFJ self.hometown = \"Ningbo, Zhejiang, China\" self.undergrad_school = \"Zhejiang University\" self.hobby = BOXING ","date":"2023-11-27 21:56:20","objectID":"/about/:0:0","tags":[],"title":"Something About Me","uri":"/about/"},{"categories":["Tech"],"content":"引用本地图片 1.在static目录下创建img子目录 将需要引用的图片都放在static\\img下。 2.在markdown里引用本地图片 如想在markdown里引用1.png，那么就在markdown里输入 ![](/img/1.png) ","date":"2023-11-10 22:10:38","objectID":"/personal-web-site/:0:1","tags":["Study"],"title":"Personal Web Site","uri":"/personal-web-site/"},{"categories":["Melton Foundation"],"content":"A Once-a-life Journey 一场我期待了3年的旅行，在30小时的航班和两天的辗转之后，终于开启。 在飞机上拍到的智利雪山 和大家伙在巴黎戴高乐机场留下的珍贵影像 想起当时第一次在Melton的推文上看到GCC：全额资助的出国旅行，这么好的机会？不得不承认我是冲着这个念头加入的Melton。那时候的我还没有意识到在未来的三年，Melton会给我的大学生活，甚至我的人生我愿意说，带来多大的变化。 还没下飞机就在WhatsApp上看到智利fellow发来在机场接机的消息，直到看到热情的Cami和有点害羞的Gloria，旅行的疲惫一扫而空。Gloria肯定是i人，我心想。没想到她会半夜把ZU的兔子从床上拉起来去蹦迪，或许这就是南美人吧。 Opening Ceremony 其实直到第二天Opening Ceremony的时候都没什么实感，因为时差整个人处于盘古开天地的混沌之中。下午的舞蹈彻底把我唤醒了，有生之年看到了Eason的灵魂舞步，满足。这几乎是我从小到大第一次在公共场合这么自由地跳舞，没有任何排练，想跳成什么样就跳成什么样，南美真的会让人放松。 和朋友们 我总说我是一个既理想主义，又囿于现实无法逃脱的胆小鬼。但是在智利，好像有了勇气去面对很多。 尝试抓住一切机会和各个国家的fellow交流 对于这场从狭窄的大学生活里逃出来的梦，回忆的时候总是蹦出来一些好像被忽略的小细节：Joaquin院子里自由的鸟、cheer up以为自己丢了信封而很伤心的Pedro、还有以为中国人都会Chinese Kungfu的智利小哥……太多太多小事。GCC最难割舍的是这群来自五个大洲的朋友们，每一个人都善良、鲜活、勇敢，我在他们身上看到了无限的可能性。很感谢那天晚上的自己下定决心填了Melton的报名表，给我在地球另一端看见更多的机会。 我会永远记得南美的春天、雪山和可爱的fellows. 🇨🇱 Chile | Temuco | Pucón | UFRO | Conguillío Something about LOVE, about collaboration, about global citizenship, about who we are and why we exist. The best best journey I have ever had. ‘Do something. Do something to make the world a better place 🌎’ See ya later!👋🏿👋🏽👋🏻👋 ","date":"2023-11-05 21:56:51","objectID":"/2023-chile-gcc/:0:1","tags":["Melton","AboutMe"],"title":"2023 Chile GCC","uri":"/2023-chile-gcc/"},{"categories":["Tech"],"content":"定义函数 from itertools import count import numpy as np import time def avg_per_group(data): sum_per_group = data.sum(axis=1) # 每行总和 count_per_group = (data!=0).sum(axis=1) # 每行非零数据个数 return sum_per_group / count_per_group def balance(data, shape, diff_expected=0.1, max_exchange=1000000): rows, cols, concav = shape # 每行平均值=每行total/每行非零数据个数 def avg_per_group(data): sum_per_group = data.sum(axis=1) # 每行总和 count_per_group = (data!=0).sum(axis=1) # 每行非零数据个数 return sum_per_group / count_per_group begin_time = time.time() total_exchange = 0 # 交换次数 for epoch in count(1, step=1): # 从1开始，步长为1,epoch表示轮次 diff_begin = avg_per_group(data).ptp() # 极差,ptp()函数表示最大值与最小值的差 if diff_begin \u003c diff_expected: print('='*80) print('极差已达标，成功优化!') break row1, row2 = avg_per_group(data).argmax(), avg_per_group(data).argmin() # 最大行，最小行 bak = avg_per_group(data)[[row1, row2]] # 备份最大行，最小行 valid_col1 = cols - (row1 \u003e= concav) # 最大行有效数据个数 valid_col2 = cols - (row2 \u003e= concav) # 最小行有效数据个数 diff_end = diff_begin for i in range(max_exchange): col1 = np.random.randint(0, valid_col1) # 随机列1 col2 = np.random.randint(0, valid_col2) # 随机列2 data[row1, col1], data[row2, col2] = data[row2, col2], data[row1, col1] # 交换 diff_end = avg_per_group(data).ptp() # 交换后的极差 if abs(diff_end) \u003c diff_begin: # 交换后的极差小于交换前的极差,abs()函数表示取绝对值 temp = avg_per_group(data)[row1] + avg_per_group(data)[row2] avg_per_group(data)[row1] = (temp + diff_end) / 2 avg_per_group(data)[row2] = (temp - diff_end) / 2 if epoch%1000==0 or i\u003e100000: print(f'轮次：{epoch:\u003c8}， 交换次数：{i+1:\u003c10}， 初始差距{diff_begin:\u003c8}， 结束差距：{abs(diff_end):\u003c8}') total_exchange += i+1 break else: avg_per_group(data)[[row1, row2]] = bak print('超过最大允许交换数，未达到优化目标!') total_exchange += max_exchange break print('最终极差为：', avg_per_group(data).ptp()) elapsed_time = time.time()-begin_time print(f'{rows}行{cols}列的矩阵，优化{epoch-1}轮') 平均分配 import numpy as np import pandas as pd import math MQL = [\"Abandoner\", \"NS-psn\", \"NS-biz\", \"New Service\", \"New Biller\", \"Fast Mover\", \"Others\"] MQL_cr = [0.06, 0.09, 0.139, 0.103, 0.26, 0.172, 0.1] MQL_counts = [7, 3, 5, 24, 0, 0, 0] # replace with actual counts DGR = [\"Zhong Fachao\", \"Huang Jiaqi\", \"Fang Jun\", \"Zhang Rebecca\", \"Ma Haocheng\", \"Yang Song\", \"Sun Weiqiu\",\"Wang Yang\", \"Zhao Hongyu\"] # \"Huang Yudi\", \"Zhang Jinzhen\", \"Liang Chuang\", m = len(DGR) N = sum(MQL_counts) print(\"MQL总数：\",N) # Create a 2D matrix with default values as 0 cols = math.ceil(N / m) matrix = np.zeros((m, cols)) # Fill the matrix with the sweetness of candies MQL_index = 0 # MQL_index表示MQL_cr的索引 ct = 1 for j in range(cols): # j表示列 for i in range(m): # i表示行 if ct \u003c= N: # ct表示已经分配的MQL数量 while MQL_counts[MQL_index] == 0 or MQL_cr[MQL_index] == 0: MQL_index += 1 if MQL_counts[MQL_index] \u003e 0: matrix[i][j] = MQL_cr[MQL_index] MQL_counts[MQL_index] -= 1 ct += 1 else: MQL_index += 1 if MQL_index \u003c len(MQL_counts): matrix[i][j] = MQL_cr[MQL_index] MQL_counts[MQL_index] -= 1 ct += 1 else: break else: break if m * math.ceil(N/m) - N == 0: concave = 0 else: concave = m -(m * math.ceil(N/m) - N) print(\"DGR人数：\",m) # print(candy_per_row) 矩阵的列数，即每个DGR被分到的MQL数量 # print(concave) balance( data = matrix, shape = (m, cols, concave), diff_expected = 0.005 ) results = np.zeros((m, len(MQL_cr))) # 初始化输出表格 for i in range(len(matrix)): results[i] = [0] * len(MQL_cr) # 遍历矩阵并更新results表格 for i in range(len(matrix)): for j in range(len(matrix[i])): if matrix[i][j] in MQL_cr: column_index = MQL_cr.index(matrix[i][j]) results[i][column_index] += 1 # 计算每行的总和和平均值 row_sums = [sum(row) for row in results] row_averages = [sum(row) / len(row) for row in results] # 输出结果 for i in range(len(results)): # CR保留2位小数 print(DGR[i],results[i],\"Total #MQL=\", sum(results[i]),\",\" ,\"CR =\", round(sum(matrix[i])/sum(results[i]), 4)) # 转换为整数格式 results = results.astype(int) # 将results转换为DataFrame df = pd.DataFrame(results, columns=MQL,index = DGR) # 增加两列 df['Total #MQL'] = df.apply(lambda x: x.sum(), axis=1) for i in range(len(results)): df['CR'] = df.apply(lambda x: round(sum(matrix[i])/sum(results[i","date":"2023-07-10 22:10:38","objectID":"/equal-distribution-algorithm/:0:0","tags":["Study"],"title":"Equal Distribution Algorithm","uri":"/equal-distribution-algorithm/"},{"categories":["Melton Foundation"],"content":"Reflection Video Our Longquan Journey Gue principles of global citizenship practice and education, the Melton Foundation’s projects and activities are closely aligned with the United Nations’ 17 Sustainable Development Goals (UNSDGs), and emphasize grassroots action and cross-cultural cooperation to address the challenges of the modern world. SDG4 aims to ’ensure inclusive and equitable quality education and promote lifelong learning opportunities for all.’ It focuses on providing children and adolescents with quality, accessible education and other learning opportunities, creating a safe, inclusive, and effective learning environment for everyone. As part of the Melton Foundation’s traditional 100 ACTS project We arrived at Jinxi Town Central Primary School in Lishui City, Zhejiang Province to carry out a week-long teaching program. An endless journey has just begun… The canteen at Jinxi Town Primary School is small, but a few wooden tables are enough to accommodate all the children in the school. Just this morning, we met the third graders for the first time. On our way to lunch, we encountered them, and a little boy from the class gave us a pear and an egg. It was only when we entered the cafeteria with the egg that we learned it was part of the school’s ’nutritional lunch’ program, provided only to students in extreme poverty. Physical education class is often the most anticipated lesson of the week for the fifth graders, and during this time, we witnessed their energy and enthusiasm. After running and warming up with them, the children eagerly requested to start playing games. Eason and Ty led the boys in playing ‘Monkey Tricks’ on the basketball court, while Xiao Liang and C Zhang guided the girls in a game of ‘Sticking Plasters’ on the track. The boys quickly grew tired of these games and divided into two teams, asking us to play basketball with them. They were rowdy but also innocent and sincere. That day, after the classes and returning to our homestay, we all reflected on the experience, feeling a return to a sense of pure joy, inspired by these tireless children running back and forth on the sports field. Before leaving, we prepared postcards from Zhejiang University and notebooks for every child we had taught, inscribing them with heartfelt wishes and blessings from us. What we didn’t expect was the children, during the break, carefully opening the door of the rest room and presenting us with Teacher’s Day greeting cards and flowers they had folded themselves. The cards were simple, just a piece of cardboard with crooked writing like ‘Happy Teacher’s Day, Little Fish’ and ‘Wishing the teacher academic success,’ revealing the purest feelings and insights of these young, inexperienced children. We hadn’t anticipated that just a week’s interaction would make the children cry and not want us to leave. Perhaps they were simply afraid of parting, because to them, we were the big brothers and sisters who would run around the playground with them and reward them with candy. A third grader asked me, ‘Teacher, will you forget about us after you leave?’ That moment touched me deeply. He might not yet understand what this journey meant for them and for us, but to me, the children’s clear sense of right and wrong, their innocence and authenticity, gave me a wonderful sense of security. – Wechat post link: https://mp.weixin.qq.com/s/ddhBP-hCHSrLnF8AIdHJTg ","date":"2022-09-10 22:10:38","objectID":"/jinxi-support-education/:0:0","tags":["Melton"],"title":"Jinxi Support Education","uri":"/jinxi-support-education/"}]